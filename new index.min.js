/**
 * Created by Administrator on 2017/2/5.
 */
(function () {
    var drawing = document.getElementById("drawing"), ctx = drawing.getContext("2d"), fireWorkArr = [];
    start();
    function start() {
        fireWorkArr = [];
        var a = 0;
        setInterval(function () {
            if (0 === a++ % 70)for (var c = 2 * Math.random() + 1, b = 0; b < c; b++)fireWorkArr.push(new fireworks);
            ctx.clearRect(0, 0, 1600, 700);
            fireWorkArr.forEach(function (a, f) {
                a.boomFlag ? a.boom(f) : a.toSky()
            })
        }, 15)
    }
    fireworks.prototype.toSky = function () {
        this.xLeader += this.xStep;
        this.yStep += this.yg;
        this.yLeader += this.yStep;
        var a = this;
        createDotArr(this);
        this.dots.forEach(function (c, b) {
            animate(c, b, a)
        });
        0 < this.yStep && (this.boomFlag = !0)
    };
    fireworks.prototype.boom = function (a) {
        var c = this;
        0 !== this.dots.length && (this.dots.forEach(function (a, b) {
            animate(a, b, c)
        }), this.dots.shift());
        if (!this.lineArr) {
            this.lineArr = [];
            for (var b = 0; b < this.lineNum; b++)this.lineArr[b] = new lines(this, b);
            var d = 3 * Math.random() + 3;
            .5 < Math.random() ? this.lineArr.forEach(function (a, b) {
                    a.xStep = .5 < Math.random() ? 6 * Math.random() - 3 : Math.cos(2 * b * Math.PI / c.dotNum) * d;
                    a.yStep = .5 < Math.random() ? 6 * Math.random() - 3 : Math.sin(2 * b * Math.PI / c.dotNum) * d;
                    a.R = Math.ceil(255 * Math.random());
                    a.G = Math.ceil(255 * Math.random());
                    a.B = Math.ceil(255 * Math.random())
                }) : this.lineArr.forEach(function (a, b) {
                    a.xStep = Math.cos(2 * b * Math.PI / c.dotNum) * d;
                    a.yStep = Math.sin(2 * b * Math.PI / c.dotNum) * d;
                    a.R = c.R;
                    a.G = c.G;
                    a.B = c.B
                })
        }
        this.lineArr.forEach(function (a, b) {
            a.xLeader += a.xStep;
            a.yStep += a.yg;
            a.yLeader += a.yStep;
            createDotArr(a);
            a.dots.forEach(function (d, e) {
                a.boomTimer += .02;
                animate(d, 0 > e - a.boomTimer ? 0 : e - a.boomTimer, a);
                a.boomTimer > a.dotNum && c.lineArr.splice(b, 1)
            })
        });
        0 === this.lineArr.length && fireWorkArr.splice(a, 1)
    };
    function fireworks() {
        this.xStrat = 1E3 * Math.random() + 300;
        this.yStrat = drawing.offsetHeight;
        this.xStep = 500 > this.xStrat ? 1.2 + 3.5 * Math.random() : -1.2 - 3.5 * Math.random();
        this.yStep = -7 - 5 * Math.random();
        this.yg = .1;
        this.xLeader = this.xStrat;
        this.yLeader = this.yStrat;
        this.R = Math.ceil(255 * Math.random());
        this.G = Math.ceil(255 * Math.random());
        this.B = Math.ceil(255 * Math.random());
        this.boomFlag = !1;
        this.dotNum = 20;
        this.dots = [];
        this.lineNum = 10 * Math.random() + 20
    }
    function lines(a, c) {
        this.yg = .05;
        this.xLeader = a.xLeader;
        this.yLeader = a.yLeader;
        this.dotNum = 10 * Math.random() + 20;
        this.dots = [];
        this.boomTimer = 0
    }
    function animate(a, c, b) {
        var d = ctx.createRadialGradient(a.x, a.y, 1, a.x, a.y, c / b.dots.length * 5);
        d.addColorStop(1, "rgba(" + b.R + "," + b.G + "," + b.B + ", 0 )");
        d.addColorStop(0, "rgba(" + b.R + "," + b.G + "," + b.B + "," + c / b.dotNum + ")");
        ctx.fillStyle = d;
        ctx.beginPath();
        ctx.arc(a.x, a.y, c / b.dots.length * 5, 0, 2 * Math.PI, !1);
        ctx.closePath();
        ctx.fill()
    }
    function createDotArr(a) {
        void 0 === a.numTemp && (a.numTemp = a.dotNum);
        if (0 < --a.numTemp) a.dots.push({x: a.xLeader, y: a.yLeader}); else {
            for (var c = 0; c < a.dots.length - 1; c++)a.dots[c] = a.dots[c + 1];
            a.dots[a.dots.length - 1] = {x: a.xLeader, y: a.yLeader}
        }
    };
})()